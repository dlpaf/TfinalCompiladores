# Compilador LPMS - Análise Léxica e Sintática

Este é um compilador para a linguagem LPMS que realiza análise léxica e sintática, gerando tokens e uma Árvore Sintática Abstrata (AST) do programa de entrada.

## Pré-requisitos

- Python 3.7 ou superior
- Bibliotecas Python listadas em requirements.txt

## Instalação e Configuração

1. Primeiro, instale o virtualenv se ainda não tiver:
pip install virtualenv

2. Crie um novo ambiente virtual:
# No Windows:
python -m venv venv
# No Linux/macOS:
python3 -m venv venv

3. Ative o ambiente virtual:
# No Windows:
venv\Scripts\activate

# No Linux/macOS:
source venv/bin/activate

4. Instale as dependências necessárias:
pip install -r requirements.txt

5. Coloque todos os arquivos no mesmo diretório:
   - lexer.py
   - parser.py
   - requirements.txt
   - entrada.txt (seu programa LPMS)

## Executando o Compilador

Existem duas formas de executar o compilador:

### 1. Análise Completa (Léxica + Sintática)
Execute o parser, que automaticamente realizará a análise léxica primeiro:
python parser.py entrada txt

Isso irá gerar:
- `parser_out.txt`: Contendo a AST ou erros sintáticos/semânticos

OBS: O TOKEN PROGRAM DEVE SER Program, com P maiúsculo

### 2. Apenas Análise Léxica
Se desejar ver apenas os tokens gerados:
python lexer.py entrada.txt

Isso irá gerar:
- `saida.txt`: Contendo a lista de tokens identificados

### 3. Gerar TAC e Código de Máquina
python tac_generator.py entrada.txt

Isso irá gerar:
- `intermediate.tac`: Contendo o código intermediário
- `output.asm`: Contendo o código de máquina